<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_selector</spriteName>
  <solid>-1</solid>
  <visible>0</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Navigation 

/// UP
if (keyboard_check_pressed(vk_up)){
    if (y = obj_menu_start.y){ 
        y = obj_menu_exit.y;
    }   
    else
        if (y = obj_menu_exit.y){
            y = obj_menu_options.y;
        }
    else
        if (y = obj_menu_options.y){
            y = obj_menu_start.y;
        }          
    }

/// DOWN
if (keyboard_check_pressed(vk_down)){
    if (y = obj_menu_start.y){ 
        y = obj_menu_options.y;
    }
    else
        if (y = obj_menu_options.y){ 
            y = obj_menu_exit.y;
        }  
    else
        if (y = obj_menu_exit.y){ 
            y = obj_menu_start.y;
        }      
    }



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Activate

if (keyboard_check(vk_enter)){
    if (place_meeting(x, y, obj_menu_start)){
        room_goto(rando_room);
        }
    if (place_meeting(x, y, obj_menu_options)){
        room_goto(rm_options);
        }
    if (place_meeting(x, y, obj_menu_exit)){
        game_end();
        }
    }
    
/*if (mouse_check_button_pressed(mb_left)){
    if (place_meeting(x, y, obj_menu_start)){
        room_goto(rando_room);
        }
    if (place_meeting(x, y, obj_menu_options)){
        room_goto(rm_options);
        }
    if (place_meeting(x, y, obj_menu_exit)){
        game_end();
        }
    }   */ 
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
